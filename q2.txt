#include<bits/stdc++.h>

using namespace std;
using   ll = long long;

#define fast ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

#define int             long long int

#define pb              push_back
#define mp              make_pair
#define F               first
#define S               second

#define pii             pair<int , int>
#define vec 			vector< int >

#define ALL(v)          v.begin(),v.end()
#define ALLR(v)         v.rbegin(),v.rend()
#define pi              3.14159265358979323
#define inf             LLONG_MAX
#define ones(x)         __builtin_popcount(x)
#define fill(a,b)       memset(a,b,sizeof(a))
#define mod             998244353
#define endl			"\n"

int mod_pow(int a,int b,int m)
{
    int res = 1;
    while(b)
    {
        if(b&1)
        {
            res = (res*a) % m;
        }
        a = (a*a) % m;
        b >>= 1;
    }
    return res;
}

int mod_inverse(int a , int m)
{
    return mod_pow(a , m - 2 , m);
}

void solve() {
	int n;
	
	cin >> n;
	
	string s[n];
	
	for(int i = 0; i < n; ++i) {
		cin >> s[i];
	}
	
	int t1 = s[0][1];
	int t2 = s[1][0];
	int t3 = s[n - 1][n - 2];
	int t4 = s[n - 2][n - 1];
	
	if(t1 == t2 && t2 == t3 && t3 == t4) {
		cout << 2 << endl;
		cout << 1 << " " << 2 << endl;
		cout << 2 << " " << 1 << endl;
		return;
	}
	
	if(t1 == t2 && t3 == t4 && t1 != t3) {
		cout << 0 << endl;
		return;
	}
	
	if((t1 == t3 && t2 == t4) or (t1 == t4 && t2 == t3)) {
		cout << 2 << endl;
		cout << 1 << " " << 2 << endl;
		
		if(t1 == t3) {
			cout << n-1 << " " << n << endl;
		}
		else {
			cout << n << " " << n-1 << endl;
		}
		return; 
	}
	
	if(t1 != t2) {
		if(t1 != t3) {
			cout << 1 << endl;
			cout << 2 << " " << 1 << endl;
			return;
		}
		else {
			cout << 1 << endl;
			cout << 1 << " " << 2 << endl;
			return;
		}
	}
	else if(t3 != t4){
		if(t1 != t3) {
			cout << 1 << endl;
			cout << n-1 << " " << n << endl;
			return;
		}
		else {
			cout << 1 << endl;
			cout << n << " " << n-1 << endl;
			return;
		}
	}
}

signed main() {
    fast;

    int t = 1;

    cin >> t;

    while(t--) {
        solve();
    }

    return 0;
}
